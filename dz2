import turtle
import argparse


def koch_curve(t, length, level):
    if level == 0:
        t.forward(length)
    else:
        length /= 3.0
        koch_curve(t, length, level - 1)
        t.left(60)
        koch_curve(t, length, level - 1)
        t.right(120)
        koch_curve(t, length, level - 1)
        t.left(60)
        koch_curve(t, length, level - 1)


def draw_snowflake(level):
    screen = turtle.Screen()
    screen.setup(width=800, height=800)
    screen.title(f"Сніжинка Коха – рівень рекурсії {level}")
    t = turtle.Turtle()
    t.speed(0)
    t.penup()
    t.goto(-200, 100)
    t.pendown()

    for _ in range(3):
        koch_curve(t, 400, level)
        t.right(120)

    t.hideturtle()
    screen.mainloop()


def main():
    parser = argparse.ArgumentParser(description="Фрактал Коха – візуалізація")
    parser.add_argument("level", type=int, help="Рівень рекурсії (наприклад, 0–6)")

    args = parser.parse_args()
    draw_snowflake(args.level)


if __name__ == "__main__":
    main()
